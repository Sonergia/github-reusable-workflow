name: Terraform Version Bootstrapping Step
description: 'Apply bootstrapping step'

inputs:
  AWS_ACCESS_KEY_ID_TF:
    description: 'AWS access key'
    required: true
  AWS_SECRET_ACCESS_KEY_TF:
    description: 'AWS secret key'
    required: true
  TF_DIR:
    description: 'Terraform directory'
    required: true
  TF_VERSION:
    description: 'Terraform version'
    required: false
    default: 1.3.x
  
outputs:
  PUBLIC_URL:
    description: 'Public URL'
    value: ${{ steps.output-urls.outputs.PUBLIC_URL }}
  PRIVATE_URL:
    description: 'Private URL'
    value: ${{ steps.output-urls.outputs.PRIVATE_URL }}

runs:
  using: composite
  steps:

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID_TF }}
        aws-secret-access-key: ${{ inputs.AWS_SECRET_ACCESS_KEY_TF }}
        aws-region: eu-west-3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.TF_VERSION }}

    - name: Terraform init
      shell: bash
      run: |
        terraform -chdir=${{ inputs.TF_DIR }} init \
          -upgrade \
          -reconfigure

    - name: Terraform apply
      shell: bash
      run: |
        terraform -chdir=${{ inputs.TF_DIR }} apply \
          -var current_step=bootstrapping \
          -auto-approve

    - name: Terraform output
      id: terraform-output
      shell: bash
      run: |
        echo TF_JSON_OUTPUT=$(terraform -chdir=${{ inputs.TF_DIR }} output -json | jq -rc '.json.value | fromjson') >> $GITHUB_OUTPUT

    - name: Output urls
      id: output-urls
      shell: bash
      run: |
        PUBLIC_URL=$(echo '${{ steps.terraform-output.outputs.TF_JSON_OUTPUT }}' | jq -r '.public_dns // empty')
        # prefix with https if not empty
        if [ -n "${PUBLIC_URL}" ]; then
          PUBLIC_URL="https://${PUBLIC_URL}"
        fi
        echo "PUBLIC_URL=${PUBLIC_URL}" >> $GITHUB_OUTPUT

        # prefix with http if not empty
        PRIVATE_URL=$(echo '${{ steps.terraform-output.outputs.TF_JSON_OUTPUT }}' | jq -r '.private_dns // empty')
        if [ -n "${PRIVATE_URL}" ]; then
          PRIVATE_URL="http://${PRIVATE_URL}"
        fi
        echo "PRIVATE_URL=${PRIVATE_URL}" >> $GITHUB_OUTPUT
name: define github workflows and terraform vars workflow

on:
  workflow_call:
    inputs:
      AWS_DEFAULT_REGION:
        required: false
        type: string
        default: eu-west-3
      CLUSTER:
        required: true
        type: string
      SERVICE_NAMESPACE:
        required: true
        type: string
      SERVICES:
        required: true
        type: string
      IMAGE_NAMES:
        required: true
        type: string
      IMAGE_STATIC_TAG:
        required: false
        type: string
        default: 'latest'
      DOCKERFILE_BUILD_CONTEXT:
        required: false
        type: string
        default: '.'
      FORCE_DEPLOYMENT:
        required: false
        type: boolean
        default: false
    secrets:
      MS_TEAMS_WEBHOOK_URI_CHANNEL_DEPLOY:
        required: true
    # Map the workflow outputs to job outputs
    outputs:
      AWS_DEFAULT_REGION:
        value: ${{ inputs.AWS_DEFAULT_REGION }}
      CLUSTER:
        description: "Cluster name to deploy onto (test, release, prod)"
        value: ${{ jobs.define-vars.outputs.CLUSTER }}
      SERVICE_NAMESPACE:
        description: 'Service namespace for ECR and Terraform'
        value: ${{ inputs.SERVICE_NAMESPACE }}
      SERVICES:
        description: 'Services names list for ECS and Terraform'
        value: ${{ inputs.SERVICES }}
      IMAGE_NAMES:
        description: 'List of images repo names for ECR'
        value: ${{ inputs.IMAGE_NAMES }}
      IMAGE_TAG:
        description: "Docker image tag"
        value: ${{ jobs.define-vars.outputs.IMAGE_TAG }}
      IMAGE_SHA:
        description: "Docker image git commit SHA"
        value: ${{ jobs.define-vars.outputs.IMAGE_SHA }}
      DOCKERFILE_BUILD_CONTEXT:
        description: "Docker build context (default is .)"
        value: ${{ inputs.DOCKERFILE_BUILD_CONTEXT }}
      FORCE_DEPLOYMENT:
        description: "Force Terraform to create a new task definition"
        value: ${{ inputs.FORCE_DEPLOYMENT }}

# Env vars are used in bash scripts
env:
  CLUSTER: ${{ inputs.CLUSTER }}
  IMAGE_STATIC_TAG: ${{ inputs.IMAGE_STATIC_TAG }}

jobs:
  # Define vars for workflows
  define-vars:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Git output sha short
        id: git-sha
        run: |
          echo "::notice title=Define vars::Image sha output value is 'sha-$(git rev-parse --short HEAD)'"
          echo "::set-output name=SHA_SHORT::sha-$(git rev-parse --short HEAD)"

      # Checkout reusable workflow to get bash scripts
      - uses: actions/checkout@v3
        with:
          repository: Sonergia/github-reusable-workflows
          # ref: 'delivery'

      - name: Define vars
        id: set-vars
        run: ./.github/scripts/define-vars.sh

      # Notify at the start of workflow
      - uses: toko-bifrost/ms-teams-deploy-card@master
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI_CHANNEL_DEPLOY }}
          card-layout-start: complete
          card-layout-exit: complete
          show-on-start: true
          show-on-exit: false
          show-on-failure: false
          include-files: false
          environment: ${{ inputs.CLUSTER }}
          timezone: Europe/Paris
          custom-facts: |
            - name: Service(s)
              value: ${{ join(fromJson(inputs.SERVICES), ',') }}

    outputs:
      CLUSTER: ${{ steps.set-vars.outputs.CLUSTER }}
      IMAGE_TAG: ${{ steps.set-vars.outputs.IMAGE_TAG }}
      IMAGE_SHA: ${{ steps.git-sha.outputs.SHA_SHORT }}

name: terraform deploy common workflow

on:
  workflow_call:
    inputs:
      AWS_DEFAULT_REGION:
        required: true
        type: string
      CLUSTER:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID_TF:
        required: true
      AWS_SECRET_ACCESS_KEY_TF:
        required: true
      GH_TF_SSH_KEY:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ inputs.CLUSTER }}
  cancel-in-progress: false

jobs:
  deploy-common:
    name: Terraform deploy common on cluster '${{ inputs.CLUSTER }}'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TF }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TF }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      # Common part
      - name: Terraform config global (init / validate / apply)
        env:
          GIT_SSH_COMMAND: "echo '${{ secrets.GH_TF_SSH_KEY }}' > id_rsa
            && ssh-keyscan github.com > known_hosts
            && chmod 600 id_rsa known_hosts
            && ssh -i ./id_rsa -o UserKnownHostsFile=./known_hosts"
        working-directory: ./.terraform
        run: |
          if [ -d ./common/config-global ]; then
            cd ./common/config-global
            terraform init -upgrade
            terraform validate -no-color
            terraform apply -auto-approve
          else
            echo "::warning title=Deploy common::Terraform dir './common/config-global' does not exists (but it might be on purpose)"
          fi

      - name: Terraform config cluster '${{ inputs.CLUSTER }}' (init / validate / apply)
        env:
          GIT_SSH_COMMAND: "echo '${{ secrets.GH_TF_SSH_KEY }}' > id_rsa
            && ssh-keyscan github.com > known_hosts
            && chmod 600 id_rsa known_hosts
            && ssh -i ./id_rsa -o UserKnownHostsFile=./known_hosts"
        working-directory: ./.terraform
        run: |
          if [ -d ./common/config-cluster ]; then
            cd ./common/config-cluster
            terraform init -reconfigure -upgrade -backend-config=backend-${{ inputs.CLUSTER }}.conf
            terraform validate -no-color
            terraform apply -auto-approve -var-file terraform-${{ inputs.CLUSTER }}.tfvars
          else
            echo "::warning title=Deploy common::Terraform dir './common/config-cluster' does not exists (but it might be on purpose)"
          fi
